name: Daily Data Update

on:
  schedule:
    # Run daily at 1:00 AM UTC
    - cron: '0 1 * * *'
  workflow_dispatch:
    # Allow manual triggering

jobs:
  update-data:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          cd functions
          npm ci
      
      # 1. データ収集プロセス
      - name: Collect YouTube Reviews
        env:
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: |
          cd functions/data-collection
          node -e "require('./youtubeSearch').searchAndSaveYouTubeReviews()"
      
      - name: Update Product Prices
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: |
          cd functions/data-collection
          node -e "require('./priceTracker').updateAllProductPrices()"
      
      # 2. データ分析プロセス
      - name: Extract Video Transcripts
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
        run: |
          cd functions/data-analysis
          node -e "const { batchExtractTranscripts } = require('./transcriptExtractor'); batchExtractTranscripts()"
      
      - name: Analyze Content
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          HUGGINGFACE_API_KEY: ${{ secrets.HUGGINGFACE_API_KEY }}
        run: |
          cd functions/data-analysis
          node -e "const { analyzeMultipleTranscripts } = require('./contentAnalyzer'); analyzeMultipleTranscripts()"
      
      # 3. コンテンツ生成プロセス
      - name: Generate Product Summaries
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: |
          cd functions/content-generation
          node -e "require('./summarizer').generateAllProductSummaries()"
      
      - name: Generate Schema Data
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: |
          cd functions/content-generation
          node -e "const { generateCategoryBreadcrumbSchema, generateComparisonSchema, generateFaqSchema } = require('./schemaGenerator'); generateCategoryBreadcrumbSchema(); generateComparisonSchema(); generateFaqSchema();"
      
      # 4. Next.js サイト再生成トリガー
      - name: Trigger Vercel Deployment
        env:
          VERCEL_DEPLOY_HOOK: ${{ secrets.VERCEL_DEPLOY_HOOK }}
        run: |
          curl -X POST "$VERCEL_DEPLOY_HOOK"
      
      # ログとステータス通知
      - name: Send Status Notification
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          WORKFLOW_STATUS: ${{ job.status }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"Daily Update Workflow: ${WORKFLOW_STATUS}\"}" $SLACK_WEBHOOK_URL